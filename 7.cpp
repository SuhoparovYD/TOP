#include <iostream>

/*7. Пупырка

После посылки из Китая осталась спец. плёнка для бережной перевозки груза — пупырка. 
Всего в пупырке 12 на 12 шариков-пузырьков. Состояние любого пузырька — это всегда либо он целый, либо нет, 
т.е. true или false (тип массива bool). Для начала, требуется реализовать отдельную функцию 
инициализации пупырки начальным состоянием — полностью целая пупырка, т.е. все элементы true. 
Но это только самое начало.

Программа заключается в последовательном лопанье целых регионов пузырьков. 
Перед каждым таким лопаньем надо показывать пользователю полностью всю плёнку: 
o — это целый пузырёк, x — лопнутый. Это тоже надо выделить в отдельную функцию. 
Итак, как выглядит само лопанье. Пользователь вводит две координаты: координаты 
начала региона и конца прямоугольного региона. Сама процедура лопанья пузырей должна 
быть реализована с помощью отдельной функции, все аргументы должны проверяться на их 
валидность, что они в в рамках диапазона возможных значений — иначе должна быть выведена ошибка. 
После лопанья каждого пузыря, который не был ещё лопнут до того, в консоль должно выводиться сообщение “Pop!”.

Лопанье должно продолжаться до последнего пузырька. Как только вся пупырка потрачена, 
программа заканчивает выполнение. В принципе, вы можете подсчитать окончание в самой функции 
по отображению пузырьков плёнки, т.к. она выполняется после каждого лопанья.*/

void draw(bool m[12][12]) {
    char ch;
    int i, j;
    std::cout << "\n";
    for (i = 0; i < 12; i++) {               // m
        for (j = 0; j < 12; j++) {
            if (m[i][j]) ch = '0'; else ch = 'X';
            std::cout << ch << " ";
        }
        std::cout << "\n";
    }
}

bool check(bool m[12][12]) {
    int i, j;
    for (i = 0; i < 12; i++)                // m
        for (j = 0; j < 12; j++) 
            if (m[i][j]) return true;
        
    return false;
}

int main() {
    using namespace std;
    setlocale(LC_ALL, "Russian");

    bool m[12][12];              // 

    int i, j, left, top, right, bottom;

    for (i = 0; i < 12; i++)                 // init
        for (j = 0; j < 12; j++) {
             m[i][j] = true;
        }

    do {

        draw(m);

        do {
            std::cout << "Координаты левого верхнего угла (0-11): ";  std::cin >> left >> top;
            std::cout << "Координаты правого нижнего угла (0-11): ";  std::cin >> right >> bottom;
        } while (left < 0 || top < 0 || right < 0 || bottom < 0 || left > 11 || top > 11 || right > 11 || bottom > 11);

        for (i = top; i <= bottom; i++) {               // m
            for (j = left; j <= right; j++) {
                if(m[i][j]) std::cout << "Pop! ";
                m[i][j] = false;
            }
        }

    } while (check(m));

    return 0;
}